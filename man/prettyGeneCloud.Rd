% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{prettyGeneCloud}
\alias{prettyGeneCloud}
\title{Gene Cloud Plot}
\usage{
prettyGeneCloud(
  maf_df,
  these_genes,
  other_genes,
  these_genes_colour = "#B2DF8A",
  other_genes_colour = "#bc42f5",
  colour_index
)
}
\arguments{
\item{maf_df}{A MAF-format data frame containing the mutations you want to summarize in a gene word cloud}

\item{these_genes}{An optional vector of gene symbols (defaults to all lymphoma genes)}

\item{other_genes}{An optional second vector of gene symbols to include in your cloud in a second colour}

\item{these_genes_colour}{Specify the hex code of a colour to use for the first set of genes}

\item{other_genes_colour}{Specify another hex code of a colour to use for the second set of genes}

\item{colour_index}{Optional named character vector with a name for each gene in these_genes and a colour as the value}
}
\value{
data frame with counts for each gene
}
\description{
Make a word cloud of gene names from a MAF file based on mutation frequency.
}
\details{
Create a wordcloud from an incoming MAF. Required parameter is \code{maf_df}.
Optional parameters are \code{these_genes}, \code{other_genes}, \code{these_genes_colour}, \code{other_genes_colour} and \code{colour_index}.
If no genes are supplied when calling the function, this function will default to all lymphoma genes.
}
\examples{
#get all coding SSM
maf = get_coding_ssm(seq_type = "genome")

#get gene symbols from MAF
maf_genes = dplyr::filter(maf, Hugo_Symbol != "Unknown") \%>\%
 dplyr::filter(Chromosome == "1") \%>\%
 pull(Hugo_Symbol)

#build wordcloud
prettyGeneCloud(maf_df = maf, these_genes = maf_genes)

}
