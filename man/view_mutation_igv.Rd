% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{view_mutation_igv}
\alias{view_mutation_igv}
\title{View a variant in IGV}
\usage{
view_mutation_igv(
  this_mutation,
  this_seq_type = "genome",
  igv_port = 60506,
  socket,
  sort_by = "base",
  colour_by,
  squish = FALSE,
  viewaspairs = FALSE
)
}
\arguments{
\item{this_mutation}{Specify the mutation of interest in MAF format.}

\item{this_seq_type}{Specify the seq type, default is genome.}

\item{igv_port}{Specify the port IGV is listening on. Default: 60506 (optional if using the default).}

\item{socket}{Provide the socket variable obtained by running this function with no arguments.}

\item{sort_by}{base, quality, sample or readGroup.}

\item{colour_by}{Specify how IGV should colour the reads (see IGV documentation).}

\item{squish}{Force reads to be squished (see IGV documentation). Default is FALSE.}

\item{viewaspairs}{Set to TRUE if you want the reads to be shown as pairs rather than independently (see IGV documentation), default is FALSE.}
}
\value{
Path to file (.png).
}
\description{
Load bam(s) and view the context around a mutation
}
\details{
Load bam(s) and view the context around a mutation.
IMPORTANT: you must be running IGV on the host that is running R and you need to have it listening on a port.
The simplest scenario is to run this command on a terminal (if using a Mac),
assuming you are using R on gphost10 and you have a ssh config that routes gp10 to that host

\if{html}{\out{<div class="sourceCode">}}\preformatted{ssh -X gp10
}\if{html}{\out{</div>}}

then launch IGV (e.e. from a conda installation):

\if{html}{\out{<div class="sourceCode">}}\preformatted{conda activate igv; igv &
}\if{html}{\out{</div>}}

Then obtain a socket and run this function as per the example.
}
\examples{
\dontrun{
socket = make_igv_snapshot() #run with no arguments to get the socket for a running IGV instance
this_mutation = get_coding_ssm(seq_type="capture") \%>\% head(1)
view_mutation_igv(this_mutation, 
                  socket = socket,
                  this_seq_type = "capture",
                  colour_by = "READ_STRAND",
                  squish = TRUE,
                  viewaspairs = TRUE)
}

}
