% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{fancy_alignment_plot}
\alias{fancy_alignment_plot}
\title{Visualize (stacked barplot) genomic read-subsets across a selection of samples.}
\usage{
fancy_alignment_plot(
  these_samples,
  metadata,
  comparison_group,
  seq_type = "genome",
  add_mean = TRUE,
  add_corrected_coverage = TRUE,
  filter_cohort,
  filter_pathology,
  this_color_palette = c(TotalReads = "#3D405B", TotalUniquelyMapped = "#81B29A",
    TotalDuplicatedreads = "#E07A5F"),
  plot_sub = ""
)
}
\arguments{
\item{these_samples}{Data frame with sample IDs (to be plotted) in the first column.}

\item{metadata}{Optional argument, used to derive sample IDs if sample_table is Null.}

\item{comparison_group}{Optional argument for plotting mean alignment metrics. Default is plotting the mean for samples provided. This parameter takes a list of sample IDs.}

\item{seq_type}{Subset qc metrics to a specific seq_type, default is genome.}

\item{add_mean}{Set to TRUE to superimpose mean values of plotted variables. Default is TRUE.}

\item{add_corrected_coverage}{Set to TRUE to add corrected coverage for selected samples.}

\item{filter_cohort}{If no df with sample IDs is supplied (these_samples = NULL) the function calls get_gambl_metadata and subsets on selected cohort.}

\item{filter_pathology}{If no df with sample IDs is supplied (these_samples = NULL) the function calls get_gambl_metadata and subsets on selected pathology.}

\item{this_color_palette}{Optional parameter that holds the selected colours for the plotted bars.}

\item{plot_sub}{Optional parameter, add a subtitle to alignment metric plot.}
}
\value{
plot as ggplot object.
}
\description{
Visualize (stacked barplot) genomic read-subsets across a selection of samples.
}
\examples{
all_fl = dplyr::filter(this_meta, pathology == "FL") \%>\%
  dplyr::select(sample_id) \%>\%
  arrange(sample_id) \%>\%
  as.data.frame()

all_bl = dplyr::filter(this_meta, pathology == "BL") \%>\%
  dplyr::select(sample_id) \%>\%
  arrange(sample_id) \%>\%
  as.data.frame()

plot = fancy_alignment_plot(these_samples = all_fl, seq_type = "genome", comparison_group = all_bl, plot_sub = "all FL cases (BL comparison group)")

}
