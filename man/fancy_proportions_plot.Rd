% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{fancy_proportions_plot}
\alias{fancy_proportions_plot}
\title{Visualize proportional metrics for selected samples.}
\usage{
fancy_proportions_plot(
  these_samples,
  metadata,
  these_samples_metadata,
  keep_cohort,
  keep_pathology,
  seq_type = "genome",
  plot_subtitle = ""
)
}
\arguments{
\item{these_samples}{Data frame with sample IDs (to be plotted) in the first column.}

\item{metadata}{Optional, user can provide a metadata df to subset sample IDs from.}

\item{these_samples_metadata}{GAMBL metadata subset to the cases you want to process.}

\item{keep_cohort}{Optional parameter to be used when these_sample is NULL. Calls get_gambl_metadata() and filters on the cohort supplied in this parameter.}

\item{keep_pathology}{Optional parameter to be used when these_sample is NULL. Calls get_gambl_metadata() and filters on the pathology supplied in this parameter.}

\item{seq_type}{Selected seq type for incoming QC metrics.}

\item{plot_subtitle}{Plotting parameter, subtitle of generated plot.}
}
\value{
plot as ggplot object.
}
\description{
Visualize proportional metrics for selected samples.
}
\examples{
#Example 1 - using these_samples parameter
#subset on FL cases with QC metrics available and plot
kridel_fl = get_gambl_metadata() \%>\%
 dplyr::filter(pathology == "FL", cohort == "FL_Kridel") \%>\%#
 dplyr::select(sample_id) \%>\%
 pull(sample_id)

my_plot_1 = fancy_proportions_plot(these_samples = kridel_fl, seq_type = "genome")

#Example 2 - using already filtered metadata (these_samples_metadata)
fl_metadata = get_gambl_metadata() \%>\%
 dplyr::filter(pathology == "FL", cohort == "FL_Kridel")

my_plot_2 = fancy_proportions_plot(these_samples_metadata = fl_metadata, seq_type = "genome")

#Example 3 - using in-house metadata fitlering options
my_plot_3 = fancy_proportions_plot(keep_cohort = "FL_Kridel", keep_pathology = "FL", seq_type = "genome")

}
