% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{prettyCoOncoplot}
\alias{prettyCoOncoplot}
\title{Side-by-side Oncoplots}
\usage{
prettyCoOncoplot(
  maf,
  metadata,
  comparison_column,
  comparison_values,
  label1,
  label2,
  ...
)
}
\arguments{
\item{maf}{Required argument. A maftools object containing the mutations you want to plot on both oncoplots.}

\item{metadata}{Required argument. A data.frame with metadata for both oncoplots.}

\item{comparison_column}{Required: the name of the metadata column containing the comparison values.}

\item{comparison_values}{Optional: If the comparison column contains more than two values or is not a factor, specify a character vector of length two in the order you would like the factor levels to be set, reference group first.}

\item{label1}{Optional argument. Label to be shown as a title for the oncoplot #1.}

\item{label2}{Optional argument. Label to be shown as a title for the oncoplot #2.}

\item{...}{\code{prettyOncoplot} arguments, see that function for more info on avaialble parameters.}
}
\value{
A ggplot object with 2 oncoplots side-by-side.
}
\description{
\code{prettyCoOncoplot} returns ggplot-compatible figure of 2 prettyOncoplots side-by-side.
}
\details{
This function will generate a graphic displaying 2 oncoplots side-by-side. Optionally user can
annotate each oncoplot with it's own title that will be displayed at the top. All the arguments
recognized by prettyOncoplot are supported and can be specified when calling this function.
For both oncoplots the same specified parameters will be applied (e.g. genes to display, split columns,
font size, top annotation etc). If the provided argument is not recognized by prettyOncoplot,
it will be discarded. If you want a specific order of oncoplots on the left and right, please
ensure the argument \code{comparison_column} is a factor with first level being the group
you want to be plotted on the left side. For developers: new arguments added to prettyOncoplot in the future
are expected to be out-of-the-box compatible with this function nd would not need code modifications.
}
\examples{
ssm=get_coding_ssm(limit_cohort = c("BL_Adult", "BL_Pediatric"))
ssm=maftools::read.maf(ssm)
meta=get_gambl_metadata() \%>\% dplyr::filter(cohort \%in\% c("BL_Adult", "BL_Pediatric"))
prettyCoOncoplot(maf=ssm,
    metadata = meta,
    comparison_column = "cohort",
    include_noncoding = NULL,
    minMutationPercent = 0,
    genes=c("MYC", "TET2", "TP53", "DDX3X", "ID3"),
    metadataColumns=c("pathology", "EBV_status_inf", "pairing_status", "cohort"),
    splitColumnName="EBV_status_inf",
    metadataBarHeight=10,
    fontSizeGene=12,
    metadataBarFontsize=10,
    label1="Adult",
    label2="Pediatric")

}
