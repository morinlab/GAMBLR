% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{fancy_qc_plot}
\alias{fancy_qc_plot}
\title{Plot for visualizing QC metrics and allowing for grouping by different metadata columns.}
\usage{
fancy_qc_plot(
  these_samples,
  filter_cohort,
  filter_pathology,
  seq_type = "genome",
  metadata,
  sort_by,
  plot_data,
  fill_by,
  comparison_data = NULL,
  comparison_samples = NULL,
  comp_factor,
  plot_title,
  plot_subtitle,
  y_axis_lab,
  return_plotdata = FALSE
)
}
\arguments{
\item{these_samples}{Data frame with sample IDs (to be plotted) in the first column (has to be named sample_id).}

\item{seq_type}{Selected seqtype for incoming QC metrics.}

\item{metadata}{Optional, user can provide a metadata df to subset sample IDs from.}

\item{sort_by}{Plotting parameter, set sorting column for barplots.}

\item{plot_data}{Plotting parameter, define the data type to be plotted.}

\item{fill_by}{Plotting parameter, Set fill for bar plot, can be pathology, cohort, etc.}

\item{comparison_data}{Optional parameter for adding a comparison group, can be "FL", "DLBCL", etc. Is dependent on comp_factor. If comp_factor is set to pathology, this parameter excepts the same data tytpe.}

\item{comparison_samples}{Optional aprameter, give the function a list of sample IDs to be compared against the main plotting group.}

\item{comp_factor}{Optional parameter for specifying the factor type of comparison data. Can be "pathology, "cohort", etc.}

\item{plot_title}{Plotting parameter, plot title.}

\item{plot_subtitle}{Plotting parameter, subtitle of generated plot.}

\item{y_axis_lab}{Plotting parameter, label of y-axis.}

\item{return_plotdata}{Optional parameter, if set to TRUE a list of acceptable data types for plotting will be returned, and nothing else.}
}
\value{
plot as ggplot object.
}
\description{
Plot for visualizing QC metrics and allowing for grouping by different metadata columns.
}
\examples{
#plot QC metrics (Average base Quality for all BL samples), compared to the same metric for all FL cases (pathology).
qc_avg_basequality = fancy_qc_plot(filter_pathology = "BL",
                                   comparison_data = "FL",
                                   comp_factor = "pathology",
                                   sort_by = "AverageBaseQuality",
                                   plot_data = "AverageBaseQuality",
                                   fill_by = "pathology",
                                   plot_title = "Average Base Quality",
                                   y_axis_lab = "Base Quality")

}
