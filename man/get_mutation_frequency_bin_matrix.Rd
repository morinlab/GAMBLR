% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{get_mutation_frequency_bin_matrix}
\alias{get_mutation_frequency_bin_matrix}
\title{Mutation counts across sliding windows for multiple regions.}
\usage{
get_mutation_frequency_bin_matrix(
  regions = NULL,
  regions_df = NULL,
  these_samples_metadata,
  these_sample_ids,
  maf = NULL,
  projection = "grch37",
  region_padding = 1000,
  drop_unmutated = FALSE,
  skip_regions = NULL,
  only_regions = NULL,
  slide_by = 100,
  window_size = 500,
  return_format = "wide",
  from_indexed_flatfile = TRUE,
  mode = "slms-3"
)
}
\arguments{
\item{regions}{Named vector of regions in the format c(name1 = "chr:start-end", name2 = "chr:start-end"). If neither regions nor regions_df is specified, the function will use GAMBLR aSHM region information.}

\item{regions_df}{Data frame of regions with four columns (chrom, start, end, name).}

\item{these_samples_metadata}{Metadata with at least sample_id column. If not providing a maf data frame, seq_type is also required.}

\item{these_sample_ids}{Vector of sample IDs. Metadata will be subset to sample IDs present in this vector.}

\item{maf}{Optional maf data frame. Will be subset to rows where Tumor_Sample_Barcode matches provided sample IDs or metadata table. If not provided, maf data will be obtained with get_ssm_by_regions().}

\item{projection}{Genome build the function will operate in. Ensure this matches your provided regions and maf data for correct chr prefix handling. Default "grch37".}

\item{region_padding}{Amount to pad the start and end coordinates by. Default 1000.}

\item{drop_unmutated}{Whether to drop bins with 0 mutations. If returning a matrix format, this will only drop bins with no mutations in any samples.}

\item{skip_regions}{Optional character vector of genes to exclude from the default aSHM regions.}

\item{only_regions}{Optional character vector of genes to include from the default aSHM regions.}

\item{slide_by}{Slide size for sliding window. Default 100.}

\item{window_size}{Size of sliding window. Default 500.}

\item{return_format}{Return format of mutations. Accepted inputs are "long" and "wide". Long returns a data frame of one sample ID/window per row. Wide returns a matrix with one sample ID per row and one window per column. Using the "wide" format will retain all samples and windows regardless of the drop_unmutated or min_count_per_bin parameters. Default wide.}

\item{from_indexed_flatfile}{Set to TRUE to avoid using the database and instead rely on flat files (only works for streamlined data, not full MAF details).}

\item{mode}{Only works with indexed flat files. Accepts 2 options of "slms-3" and "strelka2" to indicate which variant caller to use. Default is "slms-3".}
}
\value{
A table of mutation counts for sliding windows across one or more regions. May be long or wide.
}
\description{
Obtain a long tidy or wide matrix of mutation counts across sliding windows for multiple regions.
}
\details{
This function takes a metadata table with \code{these_samples_metadata} parameter and internally calls \link{calc_mutation_frequency_sliding_windows} (that internally calls \link{get_ssm_by_regions}).
to retrieve mutation counts for sliding windows across one or more regions. May optionally provide any combination of a maf data frame, existing metadata, or a regions data frame or named vector.
The heatmap plotting portion of this function has been moved to \link{heatmap_mutation_frequency_bin}.
}
\examples{
#load metadata.
metadata = get_gambl_metadata()
dlbcl_bl_meta = dplyr::filter(metadata, pathology \%in\% c("DLBCL", "BL"))

#bring together all derived sample-level results from many GAMBL pipelines.
dlbcl_bl_meta = collate_results(join_with_full_metadata = TRUE,
                                these_samples_metadata = dlbcl_bl_meta)

#get ashm regions
some_regions = GAMBLR.data::grch37_ashm_regions

mut_count_matrix <- get_mutation_frequency_bin_matrix(
   these_samples_metadata = dlbcl_bl_meta,
   regions_df = some_regions
)

}
