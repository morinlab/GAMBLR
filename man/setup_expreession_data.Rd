% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/portal.R
\name{setup_expreession_data}
\alias{setup_expreession_data}
\title{Setup Expression Data (cBioPortal).}
\usage{
setup_expreession_data(
  project_name = "gambl_genome",
  clinical_file_path = "data_clinical_samples.txt",
  these_genes,
  expression_df,
  out_dir
)
}
\arguments{
\item{project_name}{Unique ID for your project.}

\item{clinical_file_path}{The path to the study specific clinical file (data_clinical_samples.txt).}

\item{these_genes}{Specify a set of genes (character of vectors) that you want to return expression data for. If no genes are provided, this function will resort to all lymphoma genes.}

\item{expression_df}{Optional argument for providing an already loaded expression matrix.}

\item{out_dir}{The full path to the base directory where the files are being created.}
}
\value{
A vector of characters with sample IDs that expression data was generated for.
}
\description{
Generate expression data based on a set of genes, format and export data for cBioPortal.
}
\details{
This function takes a set of genes with the \code{these_genes} (character of vectors) parameter and returns expression data.
Expression data is then formatted to match the expected format for import to a cBioPortal study.
If no genes are provided, the function will default to all genes that are defined in the \code{lymphoma_genes} bundled data.
This function internally calls \code{get_gene_expression} for returning expression data as outlined above.
}
\examples{
#return expression data for lymphoma genes (all samples)
expression_ids = setup_expression_data(out_dir = "../../")

}
